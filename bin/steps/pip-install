# Install dependencies with Pip.
puts-step "Installing dependencies with pip"

[ ! "$FRESH_PYTHON" ] && bpwatch start pip_install
[ "$FRESH_PYTHON" ] && bpwatch start pip_install_first

#psycopg2==2.5.3
#pyyaml
#numpy==1.8.2
#Flask==0.10.1
#scipy==0.14.0
#scikit-learn==0.15.1
## requirements to be installed after successful installation of requirements.txt
#-e git+https://github.com/jcrudy/py-earth.git#egg=py-earth

/app/.heroku/python/bin/pip install psycopg2==2.5.3 --exists-action=w --src=./.heroku/src --allow-all-external
/app/.heroku/python/bin/pip install pyyaml --exists-action=w --src=./.heroku/src --allow-all-external
/app/.heroku/python/bin/pip install numpy==1.8.2 --exists-action=w --src=./.heroku/src --allow-all-
/app/.heroku/python/bin/pip install Flask==0.10.1 --exists-action=w --src=./.heroku/src --allow-all-external
/app/.heroku/python/bin/pip install scipy --exists-action=w --src=./.heroku/src --allow-all-external
/app/.heroku/python/bin/pip install pscikit-learn==0.15.1 --exists-action=w --src=./.heroku/src --allow-all-external
/app/.heroku/python/bin/pip install -e git+https://github.com/jcrudy/py-earth.git#egg=py-earth --exists-action=w --src=./.heroku/src --allow-all-external



# Smart Requirements handling
echo "psycopg2==2.5.3\npyyaml\nnumpy==1.8.2\nFlask==0.10.1\nscipy\nscikit-learn==0.15.1\n-e git+https://github.com/jcrudy/py-earth.git#egg=py-earth" > .heroku/python/requirements-declared.txt
/app/.heroku/python/bin/pip freeze > .heroku/python/requirements-installed.txt

[ ! "$FRESH_PYTHON" ] && bpwatch stop pip_install
[ "$FRESH_PYTHON" ] && bpwatch stop pip_install_first

echo
